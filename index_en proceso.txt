app.post('/google', async(req, res) => {

            var token = req.body.token;

            var googleUser = await verify(token)
                .catch(e => {
                    return res.status(403).json({
                        ok: false,
                        mensaje: 'token no valido',
                    });

                });



// Autenticacion Google
//==================================
async function verify(token) {

    const ticket = await client.verifyIdToken({
        idToken: token,
        audience: CLIENT_ID,
        // Specify the CLIENT_ID of the app that accesses the backend
        // Or, if multiple clients access the backend:
        //[CLIENT_ID_1, CLIENT_ID_2, CLIENT_ID_3]
    });

    const payload = ticket.getPayload();
    //const userid = payload['sub'];

    return {
        nombre: payload.name,
        email: payload.email,
        img: payload.picture,
        google: true
    }
}



 Usuario.findOne({ email: googleUser.email }, (err, usuarioDB) => {
                if (err) {
                    return res.status(500).json({
                        ok: false,
                        mensaje: 'error al buscar usuario',
                        errors: err
                    });

                    if (usuarioDB) {
                        if (usuarioDB.google === false) {
                            return res.status(400).json({
                                ok: false,
                                mensaje: 'Debe usar autenticacion normal'
                            });

                        } else {
                            var token = jwt.sign({ usuario: usuarioDB }, SEED, { expiresIn: 14400 });

                            res.status(200).json({
                                ok: true,
                                usuario: usuarioDB,
                                token: token,
                                id: usuarioDB.id
                            });
                        }

                    } else {
                        // el usuario no existe -- hay que crearlo

                    }
                }
            });
